// На некоторых кросс-платформенных станциях метро (как, например, «Третьяковская») на разные стороны платформы приходят поезда разных направлений. Таня договорилась встретиться с подругой на такой станции, но поскольку подруга приехала из другого часового пояса, то из-за джетлага сильно проспала, и Тане пришлось долго её ждать. Поезда всегда ходят точно по расписанию, и Таня знает, что поезд стоит на платформе ровно одну минуту, а интервал между поездами (время, в течение которого поезда у платформы нет) составляет a минут для поездов на первом пути и b минут для поездов на втором пути. То есть на первый путь приезжает поезд и стоит одну минуту, затем в течение a минут поезда у платформы нет, затем в течение одной минуты у платформы стоит следующий поезд и т. д.
// Пока Таня стояла на платформе, она насчитала n поездов на первом пути и m поездов на втором пути. Определите минимальное и максимальное время, которое Таня могла провести на платформе, или сообщите, что она точно сбилась со счёта.
// Все поезда, которые видела Таня, она наблюдала в течение всей минуты, то есть Таня не приходит и не уходит с платформы посередине той минуты, когда поезд стоит на платформе.
//
// Формат ввода
// Первая строка входных данных содержит число a — интервал между поездами на первом пути. Вторая строка содержит число b — интервал между поездами на втором пути. Третья строка содержит число n — количество поездов на первом пути, которые увидела Таня. Четвёртая строка содержит число m — количество поездов на втором пути, которые увидела Таня. Все числа — целые, от 1 до 1000.
//
// Формат вывода
// Программа должна вывести два числа: минимальное и максимальное время в минутах, которое Таня могла стоять на платформе, или одно число -1, если Таня точно ошиблась.
//
// Пример 1
// Ввод
// 1
// 3
// 3
// 2
//
// Вывод
// 5 7
//
// Пример 2
// Ввод
// 1
// 5
// 1
// 2
//
// Вывод
// -1
//
// Примечания
// В первом примере по первому пути поезда ходят через 1 минуту. По второму — через 3. Стоя на платформе 5, 6 или 7 минут, Таня могла насчитать 3 поезда на первом пути и 2 на втором.


const fs = require('fs')
let fileContent = fs.readFileSync("input.txt", "utf8");

const [delayOne, delayTwo, countOne, countTwo] = fileContent.toString().split('\n');

function subwayTimes(delayOne, delayTwo, countOne, countTwo) {
  if(!delayOne || !delayTwo || !countOne || !countTwo) {
    return -1;
  }

  const minOne = Number(countOne) + Number(delayOne) * (Number(countOne) - 1);
  const maxOne = Number(countOne) + Number(delayOne) * (Number(countOne) + 1);
  const minTwo = Number(countTwo) + Number(delayTwo) * (Number(countTwo) - 1);
  const maxTwo = Number(countTwo) + Number(delayTwo) * (Number(countTwo) + 1);

  let tmax, tmin;

  if(maxOne > maxTwo) {
    tmax = maxTwo;
  } else {
    tmax = maxOne;
  }

  if(minOne > minTwo) {
    tmin = minOne
  } else {
    tmin = minTwo;
  }

  if(tmin > tmax) {
    return -1;
  } else {
    return `${tmin} ${tmax}`;
  }
}

const result = subwayTimes(delayOne, delayTwo, countOne, countTwo);

fs.writeFileSync('output.txt', result.toString())